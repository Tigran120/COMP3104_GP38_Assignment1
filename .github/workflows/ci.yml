name: COMP3104 DevOps CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Validate required files exist
        run: |
          echo "Checking for required assignment files..."
          
          # Check for student files (pattern: StudentID_*.txt)
          student_files=$(find . -name "*_gb.txt" -o -name "*_devops.txt" -o -name "*_sdlc.txt" | wc -l)
          echo "Found $student_files student files"
          
          if [ $student_files -eq 0 ]; then
            echo "‚ùå No student files found!"
            exit 1
          else
            echo "‚úÖ Student files validation passed"
          fi
          
      - name: Check file naming convention
        run: |
          echo "Validating file naming convention..."
          
          # Check if files follow StudentID_Type.txt pattern
          for file in *_gb.txt *_devops.txt *_sdlc.txt; do
            if [[ $file =~ ^[0-9]+_(gb|devops|sdlc)\.txt$ ]]; then
              echo "‚úÖ Valid file: $file"
            else
              echo "‚ùå Invalid file name: $file"
              exit 1
            fi
          done
          
      - name: Validate file content
        run: |
          echo "Checking file content..."
          
          for file in *_gb.txt *_devops.txt *_sdlc.txt; do
            if [ -f "$file" ]; then
              lines=$(wc -l < "$file")
              if [ $lines -lt 5 ]; then
                echo "‚ùå File $file has insufficient content ($lines lines)"
                exit 1
              else
                echo "‚úÖ File $file has adequate content ($lines lines)"
              fi
            fi
          done
          
      - name: Check README exists
        run: |
          if [ -f "README.md" ]; then
            echo "‚úÖ README.md found"
          else
            echo "‚ùå README.md missing"
            exit 1
          fi
          
      - name: Validate group information
        run: |
          echo "Checking README for group information..."
          
          if grep -q "Group Members" README.md; then
            echo "‚úÖ Group Members section found"
          else
            echo "‚ùå Group Members section missing"
            exit 1
          fi
          
          if grep -q "Student ID" README.md; then
            echo "‚úÖ Student ID information found"
          else
            echo "‚ùå Student ID information missing"
            exit 1
          fi

  check-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Count commits per author
        run: |
          echo "Checking commit history..."
          
          # Get unique authors and their commit counts
          git log --pretty=format:"%an" | sort | uniq -c | while read count author; do
            echo "Author: $author - Commits: $count"
            
            if [ $count -lt 10 ]; then
              echo "‚ùå $author has only $count commits (minimum 10 required)"
              exit 1
            else
              echo "‚úÖ $author has $count commits"
            fi
          done
          
      - name: Check commit message quality
        run: |
          echo "Validating commit messages..."
          
          # Check for meaningful commit messages (not just "commit", "update", etc.)
          bad_commits=$(git log --pretty=format:"%s" | grep -i -E "^(commit|update|fix|test|wip)$" | wc -l)
          total_commits=$(git log --oneline | wc -l)
          
          echo "Total commits: $total_commits"
          echo "Low-quality commit messages: $bad_commits"
          
          if [ $bad_commits -gt $((total_commits / 2)) ]; then
            echo "‚ùå Too many low-quality commit messages"
            exit 1
          else
            echo "‚úÖ Commit message quality acceptable"
          fi

  security-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check for sensitive information
        run: |
          echo "Scanning for sensitive information..."
          
          # Check for potential passwords, keys, or tokens
          if grep -r -i -E "(password|secret|key|token|api)" . --exclude-dir=.git; then
            echo "‚ö†Ô∏è  Potential sensitive information found - please review"
          else
            echo "‚úÖ No obvious sensitive information detected"
          fi
          
      - name: Validate file permissions
        run: |
          echo "Checking file permissions..."
          
          # Ensure no files have executable permissions
          exec_files=$(find . -type f -executable | grep -v ".git" | wc -l)
          
          if [ $exec_files -gt 0 ]; then
            echo "‚ùå Found $exec_files executable files"
            find . -type f -executable | grep -v ".git"
            exit 1
          else
            echo "‚úÖ No unexpected executable files"
          fi

  summary:
    runs-on: ubuntu-latest
    needs: [validate-files, check-commits, security-check]
    steps:
      - name: CI Pipeline Summary
        run: |
          echo "üéâ All CI checks passed!"
          echo "‚úÖ File validation completed"
          echo "‚úÖ Commit history validated"
          echo "‚úÖ Security checks passed"
          echo ""
          echo "Repository is ready for submission!"
